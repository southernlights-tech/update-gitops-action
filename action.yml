name: 'Update GitOps repo'
description: 'Used for updating a gitops repo with new image(s)'
inputs:
  ssh-key:
    description: 'SSH key that has read/write access to the GitOps repo'
    required: false 
  gitops-repo:
    description: 'GitOps repo to update'
    required: true
  gitops-repo-branch:
    description: 'GitOps repo branch to update'
    required: true
    default: 'main'
  changes-by-file:
    description: 'JSON object with changes to make, by file as key'
    required: false 
  valueFile: 
    description: 'Path to the values files' 
    required: false
  value:
    description: 'Value for the property to change'
    required: false
  propertyPath: 
    description: 'Path inside the file to the property to patch'
    required: false
  commit-email:
    description: 'Email address to use for the commit'
    required: true
  commit-name:
    description: 'Name to use for the commit'
    required: true
  token:
    required: false
    description: 'GitHub AuthToken for PR'

runs:
  using: "composite"
  steps:
  - name: Checkout GitOps Repository
    uses: actions/checkout@v4
    with:
      repository: ${{ inputs.gitops-repo }}
      token: ${{ inputs.token }}
      ref: ${{ inputs.gitops-repo-branch}}
      path: gitops
  - name: Generate PR title
    shell: bash
    id: pr-title
    run: |
      RAW_MESSAGE="Repo ${{ github.event.repository.name }} published ${{ github.event.head_commit.message || github.event.release.tag_name }} by ${{ github.actor.login }}"
      if [ ${#RAW_MESSAGE} -gt 256 ]; then
        TRIMMED_MESSAGE="${RAW_MESSAGE:0:253}..."
        echo "title=$TRIMMED_MESSAGE" >> $GITHUB_OUTPUT
      else
        echo "title=$RAW_MESSAGE" >> $GITHUB_OUTPUT
      fi
  - uses: fjogeleit/yaml-update-action@v0.16.0
    with:
      branch: "gitops-${{ github.sha }}"
      repository: ${{ inputs.gitops-repo }}
      commitChange: true 
      commitUserEmail: ${{ inputs.commit-email }}
      commitUserName: ${{ inputs.commit-name }}
      createPR: true 
      format: YAML
      message: ${{ steps.pr-title.outputs.title }}
      workDir: gitops
      valueFile: ${{ inputs.valueFile }}
      propertyPath: ${{ inputs.propertyPath }}
      value: ${{ inputs.value }}
      masterBranchName: main
      token: ${{ inputs.token }}
      targetBranch: ${{ inputs.gitops-repo-branch }}
      description: "This PR was created by GitOps automation."
